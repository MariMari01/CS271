// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
                                                                  010
                                                                  011
                                                                  100
                                                                  101
                                                                  110
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:

        Not(in=sel[1], out=NotSel1);
        Not(in=sel[2], out=NotSel2);

        Or(a=sel[1], b=sel[2], out=Sel1OrSel2);
        Not(in=Sel1OrSel2, out=NotSel1OrSel2);

        And(a=NotSel2, b=sel[1], out=NotSel2Andsel1);
        And(a=sel[2], b=NotSel1, out=Sel2AndNotSel1);
        And(a=sel[2], b=sel[1], out=Sel1AndSel2);

        DMux(in=NotSel1OrSel2, sel=sel[0], a=aTemp, b=bTemp);
        DMux(in=NotSel2Andsel1, sel=sel[0], a=cTemp, b=dTemp);
        DMux(in=Sel2AndNotSel1, sel=sel[0], a=eTemp, b=fTemp);
        DMux(in=Sel1AndSel2, sel=sel[0], a=gTemp, b=hTemp);

        And(a=in, b=aTemp, out=a);
        And(a=in, b=bTemp, out=b);
        And(a=in, b=cTemp, out=c);
        And(a=in, b=dTemp, out=d);
        And(a=in, b=eTemp, out=e);
        And(a=in, b=fTemp, out=f);
        And(a=in, b=gTemp, out=g);
        And(a=in, b=hTemp, out=h);
}